name: release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      glic_version:
        description: 'alpine glibc version'
        required: true
        default: '2.35-r0'
      version:
        description: 'docker image version, default is git tag'
        required: false
        default: 'latest'
env:
  IMAGE_REPOSITORY: funnyzak/alpine-glibc
jobs:
  docker-release:
    name: Publish Docker images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get glibc version from input
        if: ${{ github.event.inputs.glic_version != '' }}
        run: |
          echo "GLIBC_VERSION=${{ github.event.inputs.glic_version }}" >> $GITHUB_ENV
      - name: get glibc release version from github sgerrand/alpine-pkg-glibc
        if: ${{ github.event.inputs.glic_version == '' }}
        run: |
          GLIBC_VERSION=$(curl -s https://api.github.com/repos/sgerrand/alpine-pkg-glibc/releases/latest | grep tag_name | cut -d '"' -f 4)
          echo "GLIBC_VERSION=${GLIBC_VERSION}" >> $GITHUB_ENV
      - name: Set Variables
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
      - name: Get version from input 
        if: ${{ github.event.inputs.version != '' }}
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      - name: Echo Variables
        run: |
          echo "VERSION=${{ env.VERSION }}"
          echo "GLIBC_VERSION=${{ env.GLIBC_VERSION }}"
          echo "BUILD_DATE=${{ env.BUILD_DATE }}"
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            VERSION=${{ env.VERSION }}
            GLIBC_VERSION=${{ env.GLIBC_VERSION }}
          push: true
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ env.VERSION }}
            ${{ env.IMAGE_REPOSITORY }}:latest
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
  push-message:
      name: Push message
      runs-on: ubuntu-latest
      needs: [docker-release]
      steps:
        - name: Push message
          uses: funnyzak/pushoo-action@main
          with:
            platforms: ifttt,wecombot,bark
            tokens: ${{ secrets.PUSH_TOKEN }}
            content: |
              # ${{ github.event.repository.name }} Docker Build Success
              ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
              ## commit message: ${{ github.event.head_commit.message }}
              ## commit url: ${{ github.event.head_commit.url }}
              ## commit author: ${{ github.event.head_commit.author.name }}
              ## commit email: ${{ github.event.head_commit.author.email }}
              ## commit id: ${{ github.event.head_commit.id }}
            title: |
              ${{ github.repository }} ${{ github.event_name }} Message
            options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
            debug: false
